import { DailyReportService } from '../dailyReportService';
import { MasterPasswordService } from '../security/masterPasswordService';
import { toast } from 'sonner';

export class ReportScheduler {
    static setupDailyReportSchedule(
    scheduledTasks: Map<string, NodeJS.Timeout>,
    clearScheduledTask: (taskName: string) => void
  ): Promise<void> {
    return new Promise((resolve) => {
      (async () => {
        try {
          
          clearScheduledTask('daily-report');

          
          const isMasterPasswordSet = await MasterPasswordService.isSet();
          if (!isMasterPasswordSet) {
            resolve();
            return;
          }

          
          
          const now = new Date();
          const nextReport = new Date();
          nextReport.setHours(21, 0, 0, 0); 

          
          if (nextReport <= now) {
            nextReport.setDate(nextReport.getDate() + 1);
          }

          const timeUntilReport = nextReport.getTime() - now.getTime();

          
          const timeoutId = setTimeout(async () => {
            await ReportScheduler.generateScheduledDailyReport();
            
            ReportScheduler.setupDailyReportSchedule(scheduledTasks, clearScheduledTask);
          }, timeUntilReport);

          scheduledTasks.set('daily-report', timeoutId);

          resolve();
        } catch (error) {
          resolve();
        }
      })();
    });
  }

    static async generateScheduledDailyReport(): Promise<void> {
    try {
      await DailyReportService.autoGenerateDailyReport();
    } catch (error) {
      
    }
  }
}
